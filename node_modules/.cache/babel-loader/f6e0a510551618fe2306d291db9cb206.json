{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\Yota-X\\\\Personal dashboard\\\\quickstart-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nconst App = () => {\n  _s();\n\n  const [context, setContext] = useState();\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\"); // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n    });\n  }, []); //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  let query = \"query { me { is_guest created_at name id}}\";\n  fetch(\"https://api.monday.com/v2\", {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': process.env.REACT_APP_API_URL\n    },\n    body: JSON.stringify({\n      query: query\n    })\n  }).then(res => res.json()).then(res => console.log(JSON.stringify(res, null, 2)));\n  console.log(process.env.REACT_APP_API_URL);\n  const text = settings.text;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8pOQg4bYhYNZkqOY5N1Ptz4qLvs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","monday","App","context","setContext","execute","listen","res","data","attentionBoxText","user","id","query","fetch","method","headers","process","env","REACT_APP_API_URL","body","JSON","stringify","then","json","console","log","text","settings"],"sources":["C:/Users/Андрей/Desktop/Yota-X/Personal dashboard/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\n\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [context, setContext] = useState();\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"\n    }.\n  Let's start building your amazing app, which will change the world!`;\n\n  let query = \"query { me { is_guest created_at name id}}\";\n\n  fetch(\"https://api.monday.com/v2\", {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': process.env.REACT_APP_API_URL\n    },\n    body: JSON.stringify({\n      query: query\n    })\n  })\n    .then(res => res.json())\n    .then(res => console.log(JSON.stringify(res, null, 2)));\n\n  console.log(process.env.REACT_APP_API_URL);\n  const text = settings.text;\n  return (\n    <div className=\"App\">\n      {text}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAO,oCAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AAEA,MAAMG,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA;IACAG,MAAM,CAACI,OAAP,CAAe,qBAAf,EAHc,CAKd;;IACAJ,MAAM,CAACK,MAAP,CAAc,SAAd,EAA0BC,GAAD,IAAS;MAChCH,UAAU,CAACG,GAAG,CAACC,IAAL,CAAV;IACD,CAFD;EAGD,CATQ,EASN,EATM,CAAT,CAHgB,CAchB;;EACA,MAAMC,gBAAgB,GAAI,2BAA0BN,OAAO,GAAGA,OAAO,CAACO,IAAR,CAAaC,EAAhB,GAAqB,eAC7E;AACL,sEAFE;EAIA,IAAIC,KAAK,GAAG,4CAAZ;EAEAC,KAAK,CAAC,2BAAD,EAA8B;IACjCC,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAiBC,OAAO,CAACC,GAAR,CAAYC;IAFtB,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBT,KAAK,EAAEA;IADY,CAAf;EAN2B,CAA9B,CAAL,CAUGU,IAVH,CAUQf,GAAG,IAAIA,GAAG,CAACgB,IAAJ,EAVf,EAWGD,IAXH,CAWQf,GAAG,IAAIiB,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,SAAL,CAAed,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAZ,CAXf;EAaAiB,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACC,GAAR,CAAYC,iBAAxB;EACA,MAAMQ,IAAI,GAAGC,QAAQ,CAACD,IAAtB;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAzCD;;GAAMxB,G;;KAAAA,G;AA2CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}